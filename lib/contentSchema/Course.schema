var mongoose = require('mongoose');
var Schema =  mongoose.Schema;

var CourseSchema = new Schema({
  "_tenantId" : {
    "type" : "String",
    "required" : true
  },
  "_type": {
    "type": "String",
    "default": "course"
  },
  "_isDeleted": {
    "type": "Boolean",
    "default": false
  },
  "title": {
    "type": "String",
    "required": true
  },
  "body": {
    "type": "String"
  },
  "submit": {
    "type": "String",
    "default": "Submit"
  },
  "reset": {
    "type": "String",
    "default": "Reset"
  },
  "showCorrectAnswer": {
    "type": "String",
    "default": "Model Answer"
  },
  "hideCorrectAnswer": {
    "type": "String",
    "default": "My Answer"
  },
  "createdAt" : {
    "type" : "Date"
  },
  "createdBy" : {
    "type" : "ObjectId",
    "ref": "user"
  },
  "updatedAt" : {
    "type" : "Date"
  },
  "updatedBy" : {
    "type" : "ObjectId",
    "ref": "user"
  },
  "_isSelected": {
    "type":"Boolean",
    "default":false
  },
  "currentMenuState": {
    "type": "String"
  }
});

CourseSchema.pre('save', function (next) {
 if (!this.createdAt) {
    this.createdAt = new Date();
  }
  // if lastUpdated is for the course then it
  // should be updated whenever any sub-element is updated
  // but for now, make it just this object...
  if (this.isNew) {
    this.updatedAt = this.createdAt;
    this.updatedBy = this.createdBy;
  } else {
    this.updatedAt = new Date();
  }
  this.markModified('updatedAt');
  next();
});

module.exports = CourseSchema;
